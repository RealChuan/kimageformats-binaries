name: Build KImageFormats
on:
  push:
  pull_request:
  workflow_dispatch:
  
env:
  VCPKG_BINARY_SOURCES: 'clear;default,readwrite'
  MACOSX_DEPLOYMENT_TARGET: 10.15

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            vers: '5.15.2'
          - os: ubuntu-latest
            vers: '6.8.1'
          - os: macos-13
            vers: '5.15.2'
          - os: macos-14
            vers: '6.8.1'
            buildArch: 'Universal'
          - os: windows-2019
            vers: '5.15.2'
            arch: 'win32_msvc2019'
            buildArch: 'X86'
          - os: windows-2019
            vers: '5.15.2'
            arch: 'win64_msvc2019_64'
          - os: windows-2022
            vers: '6.8.1'
            arch: 'win64_msvc2022_64'
          - os: windows-2022
            vers: '6.8.1'
            arch: 'win64_msvc2022_arm64_cross_compiled'
            buildArch: 'Arm64'

    steps:
      - uses: actions/checkout@v4

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          cache: true
          version: ${{ matrix.vers }}
          arch: ${{ matrix.arch }}

      # Download and build vcpkg, without installing any port. If content is cached already, it is a no-op.
      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: '2dc91c6439568f694052c3fa25859dc78d9ff8e4'

      - name: Build KImageFormats (just one big step for now)
        run: pwsh pwsh/buildkimageformats.ps1
        env:
          buildArch: ${{ matrix.buildArch }}

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: kimageformats-${{ matrix.os }}-${{ matrix.vers }}${{ matrix.arch && format('-{0}', matrix.arch) || '' }}
          path: kimageformats/output
